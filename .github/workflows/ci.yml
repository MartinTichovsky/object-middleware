name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/package.json'
      - '**/package-lock.json'
      - README.md
    tags-ignore:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        run: npm install

      - name: Test
        run: npm run test

      - name: Coveralls
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  bump-version:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Set creator
        run: |
          git config user.email "automated-version@users.noreply.github.com"
          git config user.name "Automated Version"

      - name: Increment version
        env:
          VERSION_TYPE: ${{ (startsWith(github.event.head_commit.message, 'BREAKING CHANGE:') || contains(toJSON(github.event.head_commit.message), '\n\nBREAKING CHANGE:')) && 'major' || (startsWith(github.event.head_commit.message, 'fix:') || contains(toJSON(github.event.head_commit.message), '\n\nfix:')) && 'patch' || 'minor' }}
        run: |
          npm version $VERSION_TYPE -m "v%s"
          VERSION=$(node -p "require('./package.json').version")

      - name: Push changes
        run: |
          git push --follow-tags
          git push --tags

      - name: Publish package
        run: |
          npm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" 
          npm publish
